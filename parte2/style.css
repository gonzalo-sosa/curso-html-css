/* HIDING ELEMENTS */

#hiding-elements p:first-of-type {
  display: none;
  /* oculta elemento y no ocupa espacio */
}

#hiding-elements p:nth-of-type(2) {
  visibility: hidden;
  /* oculta el elemento pero ocupa espacio */
}

/* MEDIA QUERIES */

#media-queries .container {
  display: flex;
  flex-direction: column;
}

#media-queries .box {
  padding: 1rem;
}

#media-queries .box:first-of-type {
  background-color: gold;
}

#media-queries .box:nth-of-type(2) {
  background-color: dodgerblue;
}

@media screen and (min-width: 600px) {
  .container {
    flex-direction: row;
  }
}

@media screen and (min-width: 900px) {
  .container {
    flex-direction: row;
  }
  .box {
    background-color: white;
  }
}

@media print {
  body {
    font-size: 12pt;
  }

  .box {
    padding: 0.5cm;
  }
}

/* BOX MODEL */

#box-model p {
  padding: 20px; /* Añade espacio dentro del párrafo */
  margin: 20px; /* Añade espacio por fuera del párrafo (SE COMPARTE) */
}

/* SIZING ELEMENTS */

/* box-sizing: content-box --> Valor por defecto
  width y height solo aplican al contenido
*/

/* box sizing: border-box
  width y height son calculados de acuerdo al padding y al border
*/

/* Setear todos los elementos como border-box */
*,
*::before,
*::after {
  box-sizing: border-box;
}

#sizing-elements .box {
  padding: 0.5rem;
  width: 100px;
  height: 100px;
  background-color: gold;
  display: inline-block; /* Por defecto los elementos en bloque ocupan todo el espacio disponible pero con inline sólo ocupan de acuerdo al contenido + padding + border */
}

/* OVERFLOWING */

#overflowing .container {
  display: flex;
  flex-direction: row;
  justify-content: space-between;
}

#overflowing .box {
  width: 150px;
  height: 150px;
  border: 3px solid gold;
}

#overflowing .box:nth-of-type(2) {
  overflow: hidden; /* overflow-x: hidden; overflow-y: hidden */
}

#overflowing .box:nth-of-type(3) {
  overflow: scroll; /* overflow-x: scroll; overflow-y: scroll */
}

/* MEASUREMENTS UNITS */

/* Las unidades realtivas toman como referencia al elemento padre */

#measurement-units {
  margin-top: 10rem;
}

#measurement-units .box {
  width: 150px;
  height: 150px;
  margin: 10px;
  border: 3px solid gold;
}

#measurement-units .p {
  width: 50%;
}

#measurement-units .vw {
  width: 50vw;
}

#measurement-units .vh {
  height: 100vh;
}

#measurement-units .em {
  font-size: 16px;
  height: 10em; /* 10 x font-size del elemento actual */
}

#measurement-units .rem {
  height: 10rem; /* calculado a partir del font-size * 10 del elemento raíz */
}

/* POSITIONING */

#positioning .container {
  width: 100%;
  border: 3px solid lightgreen;
  position: relative; /* necesario para ofrecer un marco a los elementos con position: absolute; */
}

#positioning .box {
  width: 7rem;
  height: 7rem;
}

#positioning .one {
  background-color: gold;
  /* position: fixed; /* relative al viewport */
  top: 0;
}

#positioning .two {
  background-color: tomato;
  position: relative; /* posicionamiento relativo al lugar donde acutalmente se encuentra el elemento */
  left: 5rem; /* es lo mismo que right: -5rem;*/
  bottom: 4rem;
  z-index: 100; /* para mover entre elementos en el eje z (mientra mayor sea z- index más adelante se mostrará el elemento) */
}

#positioning .three {
  background-color: dodgerblue;
  position: absolute; /* el elemento es eliminado de la capa por defecto (para los demás elementos no existe, por lo que pueden ocupar su espacio) */
  right: 0;
  bottom: 0;
}

#positioning .four {
  background-color: coral;
  position: absolute;
  inset: 0; /* 0 todos los sentidos */
  transform: translate(150%, 50%);
}
